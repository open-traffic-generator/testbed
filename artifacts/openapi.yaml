openapi: 3.0.3
info:
  title: Open Traffic Generator Testbed Model API
  description: |-
    OTG Testbed Model
  version: 0.0.3
  contact:
    url: https://github.com/open-traffic-generator/testbed
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: /
paths:
  /reserve:
    post:
      tags:
      - Testbed
      operationId: reserve
      description: |-
        Reserves the testbed based on available devices from inventory.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Testbed'
      responses:
        '200':
          description: |-
            Return response from the lab reservation service.
          content:
            application/json:
              schema:
                type: string
          x-field-uid: 1
        default:
          $ref: '#/components/responses/Failure'
          x-field-uid: 2
  /capabilities/version:
    get:
      tags:
      - Capabilities
      operationId: get_version
      responses:
        '200':
          description: |-
            Version details from API server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          x-field-uid: 1
        default:
          $ref: '#/components/responses/Failure'
          x-field-uid: 2
components:
  responses:
    Success:
      description: "The request has succeeded with no application content but the\
        \ server \nmay return a list of detailed warnings."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Warning'
    Failure:
      description: |-
        The request did not succeed and server has responded with error details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Testbed:
      description: |-
        A container for Testbed model.
      type: object
      properties:
        devices:
          description: "Logical Device with list of logical ports "
          type: array
          items:
            $ref: '#/components/schemas/Device'
          x-field-uid: 1
        links:
          description: |-
            Interconnection of logical ports between logical devices.
          type: array
          items:
            $ref: '#/components/schemas/Link'
          x-field-uid: 2
    Device:
      description: |-
        Device.
      type: object
      required:
      - id
      - role
      properties:
        id:
          x-field-uid: 1
          description: |-
            Globally unique id of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
          x-unique: global
        name:
          description: |-
            Name of the device that you want to match from the inventory
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
          x-field-uid: 2
        vendor:
          description: |-
            Vendor(manufacturer of the device)
          type: string
          x-field-uid: 3
        model:
          description: |-
            Model(unique identification of the device type)
          type: string
          x-field-uid: 4
        platform:
          description: "Platform (describes a combination of operating system, applications,\
            \ or other types of software that is supported by the device) "
          type: string
          x-field-uid: 5
        image:
          description: "Image (a unique software package installed on the device)\
            \  "
          type: string
          x-field-uid: 6
        ports:
          description: |-
            List of Logical ports
          type: array
          items:
            $ref: '#/components/schemas/Port'
          x-field-uid: 7
        attributes:
          description: "attributes of the devices "
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          x-field-uid: 8
        role:
          description: "Role of a device, ATE(Automatic test equipment), DUT(Device\
            \ under Test) or SWITCH.\nThe reservation system implementing the testbed\
            \ model is supposed to\nfully reserve any equipment marked as DUT.For\
            \ ATE, only the ports are intended to be reserved.\nThe switch functions\
            \ as a Layer 1 device, and the reservation system is not intended to reserve\
            \ it \nbut merely to recognize it as an intermediate device."
          type: string
          x-field-uid: 9
          x-enum:
            DUT:
              x-field-uid: 1
            ATE:
              x-field-uid: 2
            SWITCH:
              x-field-uid: 3
          enum:
          - DUT
          - ATE
          - SWITCH
    Port:
      description: |-
        Local Port for Testbed Reservation Service.
      type: object
      required:
      - id
      properties:
        id:
          description: |-
            Logical identifier for the port
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
          x-field-uid: 1
        name:
          description: |-
            Name of the port on a device that you want to match from the inventory.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
          x-field-uid: 2
        pmd:
          description: |-
            Physical medium dependent of the port.
            This should be kept in sync with the values specified in OpenConfig:
            https://github.com/openconfig/public/blob/master/release/models/optical-transport/openconfig-transport-types.yang
          type: string
          x-field-uid: 3
          default: PMD_UNSPECIFIED
          x-enum:
            PMD_UNSPECIFIED:
              x-field-uid: 1
            PMD_10GBASE_LRM:
              x-field-uid: 2
            PMD_10GBASE_LR:
              x-field-uid: 3
            PMD_10GBASE_ZR:
              x-field-uid: 4
            PMD_10GBASE_ER:
              x-field-uid: 5
            PMD_10GBASE_SR:
              x-field-uid: 6
            PMD_40GBASE_CR4:
              x-field-uid: 7
            PMD_40GBASE_SR4:
              x-field-uid: 8
            PMD_40GBASE_LR4:
              x-field-uid: 9
            PMD_40GBASE_ER4:
              x-field-uid: 10
            PMD_40GBASE_PSM4:
              x-field-uid: 11
            PMD_4X10GBASE_LR:
              x-field-uid: 12
            PMD_4X10GBASE_SR:
              x-field-uid: 13
            PMD_100G_AOC:
              x-field-uid: 14
            PMD_100G_ACC:
              x-field-uid: 15
            PMD_100GBASE_SR10:
              x-field-uid: 16
            PMD_100GBASE_SR4:
              x-field-uid: 17
            PMD_100GBASE_LR4:
              x-field-uid: 18
            PMD_100GBASE_ER4:
              x-field-uid: 19
            PMD_100GBASE_CWDM4:
              x-field-uid: 20
            PMD_100GBASE_CLR4:
              x-field-uid: 21
            PMD_100GBASE_PSM4:
              x-field-uid: 22
            PMD_100GBASE_CR4:
              x-field-uid: 23
            PMD_100GBASE_FR:
              x-field-uid: 24
            PMD_400GBASE_ZR:
              x-field-uid: 25
            PMD_400GBASE_LR4:
              x-field-uid: 26
            PMD_400GBASE_FR4:
              x-field-uid: 27
            PMD_400GBASE_LR8:
              x-field-uid: 28
            PMD_400GBASE_DR4:
              x-field-uid: 29
            PMD_100GBASE_DR:
              x-field-uid: 30
          enum:
          - PMD_UNSPECIFIED
          - PMD_10GBASE_LRM
          - PMD_10GBASE_LR
          - PMD_10GBASE_ZR
          - PMD_10GBASE_ER
          - PMD_10GBASE_SR
          - PMD_40GBASE_CR4
          - PMD_40GBASE_SR4
          - PMD_40GBASE_LR4
          - PMD_40GBASE_ER4
          - PMD_40GBASE_PSM4
          - PMD_4X10GBASE_LR
          - PMD_4X10GBASE_SR
          - PMD_100G_AOC
          - PMD_100G_ACC
          - PMD_100GBASE_SR10
          - PMD_100GBASE_SR4
          - PMD_100GBASE_LR4
          - PMD_100GBASE_ER4
          - PMD_100GBASE_CWDM4
          - PMD_100GBASE_CLR4
          - PMD_100GBASE_PSM4
          - PMD_100GBASE_CR4
          - PMD_100GBASE_FR
          - PMD_400GBASE_ZR
          - PMD_400GBASE_LR4
          - PMD_400GBASE_FR4
          - PMD_400GBASE_LR8
          - PMD_400GBASE_DR4
          - PMD_100GBASE_DR
        speed:
          type: string
          default: SPEED_UNSPECIFIED
          x-field-uid: 4
          x-enum:
            SPEED_UNSPECIFIED:
              x-field-uid: 1
            S_1GB:
              x-field-uid: 2
            S_5GB:
              x-field-uid: 3
            S_10GB:
              x-field-uid: 4
            S_25GB:
              x-field-uid: 5
            S_40GB:
              x-field-uid: 6
            S_50GB:
              x-field-uid: 7
            S_100GB:
              x-field-uid: 8
            S_200GB:
              x-field-uid: 9
            S_400GB:
              x-field-uid: 10
          enum:
          - SPEED_UNSPECIFIED
          - S_1GB
          - S_5GB
          - S_10GB
          - S_25GB
          - S_40GB
          - S_50GB
          - S_100GB
          - S_200GB
          - S_400GB
        transceiver:
          type: string
          x-field-uid: 5
        attributes:
          description: |-
            attributes of the device ports that specify an internal architecture behind the port, for example: NPU #, NPU Core, Slice #,
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          x-field-uid: 6
    Attribute:
      description: |-
        attributes of the device ports that specify an internal architecture behind the port, for example: NPU #, NPU Core, Slice #
      type: object
      properties:
        key:
          x-field-uid: 1
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
          x-unique: global
        value:
          type: string
          x-field-uid: 2
    Link:
      description: |-
        Device.
      type: object
      properties:
        src:
          $ref: '#/components/schemas/Link.Src'
          x-field-uid: 1
        dst:
          $ref: '#/components/schemas/Link.Dst'
          x-field-uid: 2
    Link.Src:
      description: |-
        Src for the link.
      type: object
      required:
      - device
      - port
      properties:
        device:
          description: |
            The unique id of a logical device

            x-constraint:
            - /components/schemas/Device/properties/id
          type: string
          x-constraint:
          - /components/schemas/Device/properties/id
          x-field-uid: 1
        port:
          description: |
            The id of a logical port of a device

            x-constraint:
            - /components/schemas/Port/properties/id
          type: string
          x-constraint:
          - /components/schemas/Port/properties/id
          x-field-uid: 2
    Link.Dst:
      description: |-
        Dst for the link.
      type: object
      required:
      - device
      - port
      properties:
        device:
          description: |
            The unique id of a logical device

            x-constraint:
            - /components/schemas/Device/properties/id
          type: string
          x-constraint:
          - /components/schemas/Device/properties/id
          x-field-uid: 1
        port:
          description: |
            The id of a logical port of a device

            x-constraint:
            - /components/schemas/port/properties/id
          type: string
          x-constraint:
          - /components/schemas/port/properties/id
          x-field-uid: 2
    Error:
      description: |-
        Error response generated while serving API request.
      type: object
      required:
      - code
      - errors
      properties:
        code:
          description: |-
            Numeric status code based on the underlying transport being used.
            The API server MUST set this code explicitly based on following references:
              - HTTP 4xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.5
              - HTTP 5xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.6
              - gRPC errors: https://grpc.github.io/grpc/core/md_doc_statuscodes.html
          type: integer
          format: int32
          x-field-uid: 1
        kind:
          description: |-
            Classification of error originating from within API server that may not be mapped to the value in `code`.
            Absence of this field may indicate that the error did not originate from within API server.
          type: string
          x-enum:
            validation:
              x-field-uid: 1
            internal:
              x-field-uid: 2
          x-field-uid: 2
          enum:
          - validation
          - internal
        errors:
          description: |-
            List of error messages generated while executing the request.
          type: array
          items:
            type: string
          x-field-uid: 3
    Warning:
      description: |-
        A list of warnings that have occurred while executing the request.
      type: object
      properties:
        warnings:
          description: "A list of any system specific warnings that have occurred\
            \ while \nexecuting the request."
          type: array
          items:
            type: string
          x-field-uid: 1
    Version:
      description: |-
        Version details
      type: object
      properties:
        api_spec_version:
          description: |-
            Version of API specification
          type: string
          default: ''
          x-field-uid: 1
        sdk_version:
          description: |-
            Version of SDK generated from API specification
          type: string
          default: ''
          x-field-uid: 2
        app_version:
          description: |-
            Version of application consuming or serving the API
          type: string
          default: ''
          x-field-uid: 3
